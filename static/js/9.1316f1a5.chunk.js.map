{"version":3,"sources":["../node_modules/reactstrap/es/Spinner.js","pages/questionList.js","config/index.js","apiServices/Api.js","apiServices/QuestionService.js","../node_modules/react-iframe/dist/es/iframe.js"],"names":["propTypes","tag","utils","type","prop_types_default","a","string","size","color","className","cssModule","object","children","Spinner_Spinner","props","Tag","attributes","Object","objectWithoutPropertiesLoose","classes","classnames_default","react_default","createElement","esm_extends","role","defaultProps","es_Spinner","QuestionListPage","_useState","useState","_useState2","slicedToArray","isLoading","updateIsLoading","columns","dataField","text","filter","textFilter","formatter","cellContent","row","question_type","iframe","url","question","width","height","id","display","position","style","level_q_id","level","game_name","Button","onClick","question_id","history","push","outline","index_esm","useHistory","_useState3","_useState4","questionDataArray","newQuestionDataArray","useEffect","getUserList","e","QuestionService","GetQuestionList","then","response","data","status","Record","catch","error","console","log","finally","Fade","in","timeout","Row","Col","sm","md","offset","Card","CardHeader","CardBody","lib_default","keyField","pagination","paginationFactory","filterFactory","__webpack_require__","d","__webpack_exports__","BASEURL","axios__WEBPACK_IMPORTED_MODULE_1__","axios__WEBPACK_IMPORTED_MODULE_1___default","n","_config_index__WEBPACK_IMPORTED_MODULE_2__","instance","axios","create","baseURL","defaults","headers","common","interceptors","use","Promise","reject","_Api__WEBPACK_IMPORTED_MODULE_0__","AddQuestion","payload","Api","post","get","EditQuestion","questionId","concat","GetGameList","GetLevelList","EditLevelList","level_id","GetLevelQuestionSetList","AddLevelQuestion","GetLevelQuestionList","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","object_assign__WEBPACK_IMPORTED_MODULE_1__","object_assign__WEBPACK_IMPORTED_MODULE_1___default","__assign","assign","t","s","i","arguments","length","p","prototype","hasOwnProperty","call","apply","this","_a","allowFullScreen","overflow","styles","onLoad","onMouseOver","onMouseOut","scrolling","frameBorder","ariaHidden","sandbox","allow","title","ariaLabel","ariaLabelledby","name","target","loading","importance","referrerpolicy","allowpaymentrequest","src","aria-labelledby","aria-hidden","aria-label","_i","_b","keys","prop","_c","_d","currentAllow","replace","trim","border"],"mappings":"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","file":"static/js/9.1316f1a5.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  type: PropTypes.string,\n  size: PropTypes.string,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.string\n};\nvar defaultProps = {\n  tag: 'div',\n  type: 'border',\n  children: 'Loading...'\n};\n\nvar Spinner = function Spinner(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      type = props.type,\n      size = props.size,\n      color = props.color,\n      children = props.children,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"type\", \"size\", \"color\", \"children\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, size ? \"spinner-\" + type + \"-\" + size : false, \"spinner-\" + type, color ? \"text-\" + color : false), cssModule);\n  return React.createElement(Tag, _extends({\n    role: \"status\"\n  }, attributes, {\n    className: classes\n  }), children && React.createElement(\"span\", {\n    className: mapToCssModules('sr-only', cssModule)\n  }, children));\n};\n\nSpinner.propTypes = propTypes;\nSpinner.defaultProps = defaultProps;\nexport default Spinner;","import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\r\nimport Iframe from 'react-iframe';\r\n\r\nimport paginationFactory, {\r\n  PaginationProvider,\r\n} from 'react-bootstrap-table2-paginator';\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Col,\r\n  Row,\r\n  Table,\r\n  Button,\r\n  Spinner,\r\n  Fade,\r\n} from 'reactstrap';\r\nimport QuestionService from '../apiServices/QuestionService';\r\nimport { MdEdit } from 'react-icons/md';\r\n\r\nconst QuestionListPage = props => {\r\n  const [isLoading, updateIsLoading] = useState(false);\r\n  const columns = [\r\n    {\r\n      dataField: 'question',\r\n      text: 'Question',\r\n      filter: textFilter(),\r\n      formatter: (cellContent, row) => (\r\n        <div>\r\n          <span>\r\n            {row.question_type == '2' ? (\r\n              <Iframe\r\n                url={row.question}\r\n                width=\"120px\"\r\n                height=\"120px\"\r\n                id=\"myId\"\r\n                className=\"myClassname\"\r\n                display=\"initial\"\r\n                position=\"relative\"\r\n              />\r\n            ) : (\r\n              row.question\r\n            )}\r\n          </span>\r\n        </div>\r\n      ),\r\n    },\r\n\r\n    {\r\n      dataField: 'options',\r\n      text: 'Options',\r\n    },\r\n    {\r\n      dataField: 'correct_options',\r\n      text: 'Correct Option',\r\n    },\r\n    {\r\n      dataField: 'question_type',\r\n      text: 'Type (1-Ques,2-Img)',\r\n      filter: textFilter(),\r\n      formatter: (cellContent, row) => (\r\n        <div>\r\n          <span\r\n            style={\r\n              row.level_q_id\r\n                ? { display: 'block', color: 'green' }\r\n                : { display: 'block' }\r\n            }\r\n          >\r\n            {row.question_type == '2' ? 'Image' : 'Question'} <br></br>\r\n            {row.level_q_id ? 'ADDED TO Level ' : ''} {row.level}{' '}\r\n            {row.game_name}\r\n          </span>{' '}\r\n        </div>\r\n      ),\r\n    },\r\n\r\n    {\r\n      dataField: '',\r\n      text: 'Action',\r\n      formatter: (cellContent, row) => (\r\n        <div className=\"checkbox disabled\">\r\n          <Button\r\n            onClick={() => handleEditQuestion(row.question_id)}\r\n            outline\r\n            color={row.level_q_id ? 'warning' : 'success'}\r\n            size=\"sm\"\r\n          >\r\n            <MdEdit /> Edit\r\n          </Button>{' '}\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n  let history = useHistory();\r\n  const [questionDataArray, newQuestionDataArray] = useState([]);\r\n  useEffect(() => {\r\n    getUserList();\r\n  }, []);\r\n  const getUserList = e => {\r\n    updateIsLoading(true);\r\n\r\n    // ... submit to API or something\r\n    QuestionService.GetQuestionList()\r\n      .then(response => {\r\n        const { data } = response;\r\n        if (data && data.status === true) {\r\n          newQuestionDataArray(data.Record.data);\r\n          updateIsLoading(false);\r\n        } else {\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log('On Catch Add_Submission_Tagging_User', error);\r\n      })\r\n      .finally(() => {});\r\n  };\r\n\r\n  function handleNewQuestion() {\r\n    history.push('/questionForm', {\r\n      question_id: '',\r\n    });\r\n  }\r\n  function handleEditQuestion(id) {\r\n    history.push('/questionForm', {\r\n      question_id: id,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"mb-3\">\r\n      <Fade in={true} timeout={200}>\r\n        {isLoading === true ? (\r\n          <Spinner style={{ width: '3rem', height: '3rem' }}></Spinner>\r\n        ) : (\r\n          <Row>\r\n            <Col sm=\"12\" md={{ size: 12, offset: 0 }}>\r\n              <Card className=\"m-3\">\r\n                <CardHeader>\r\n                  Questions{' '}\r\n                  <Button\r\n                    color=\"success\"\r\n                    onClick={handleNewQuestion}\r\n                    className=\"float-right\"\r\n                  >\r\n                    Add Question\r\n                  </Button>{' '}\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <BootstrapTable\r\n                    keyField=\"id\"\r\n                    data={questionDataArray}\r\n                    columns={columns}\r\n                    pagination={paginationFactory()}\r\n                    filter={filterFactory()}\r\n                  />\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        )}\r\n      </Fade>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionListPage;\r\n","export const BASEURL = 'http://65.0.110.222:5000/';\r\nexport const API_VERSION = 'v1';\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { BASEURL } from '../config/index';\r\n// import { router } from \"@/router\";\r\n// import cookieType from \"@/helpers/cookieType\";\r\n// import Constant from \"@/helpers/constant\";\r\n\r\nexport default () => {\r\n  const instance = axios.create({\r\n    baseURL: BASEURL,\r\n  });\r\n\r\n  instance.defaults.headers.common['Access-Control-Allow-Origin'] = '*';\r\n\r\n  instance.interceptors.response.use(\r\n    function (response) {\r\n      // Do something with response data\r\n      return response;\r\n    },\r\n    function (error) {\r\n      return Promise.reject(error);\r\n    },\r\n  );\r\n  return instance;\r\n};\r\n","import Api from './Api';\r\nimport { API_VERSION } from '../config/index';\r\n\r\nexport default {\r\n  AddQuestion(payload) {\r\n    return Api().post('admin/addEditQuestion', payload);\r\n  },\r\n  GetQuestionList() {\r\n    return Api().get(`admin/questionlist`);\r\n  },\r\n\r\n  EditQuestion(questionId) {\r\n    return Api().get(`admin/questionlist?question_id=${questionId}`);\r\n  },\r\n  // Level Questions\r\n  GetGameList() {\r\n    return Api().get('admin/gamelist');\r\n  },\r\n\r\n  GetLevelList() {\r\n    return Api().get('admin/LevelList');\r\n  },\r\n  EditLevelList(level_id) {\r\n    return Api().get(`admin/LevelList?level_id=${level_id}`);\r\n  },\r\n  GetLevelQuestionSetList() {\r\n    return Api().get('admin/LevelQuestionSetList');\r\n  },\r\n\r\n  AddLevelQuestion(payload) {\r\n    console.log(payload);\r\n    return Api().post('admin/addEditLevel', payload);\r\n  },\r\n  GetLevelQuestionList() {\r\n    return Api().get(`admin/questionlist?isUnique=1`);\r\n  },\r\n\r\n  //   GetSubmissionFeedbacks(payload) {\r\n  //     return Api().post(\r\n  //       `/${API_VERSION}/section/feedback/${payload.feedback_id}`,\r\n  //       payload,\r\n  //     );\r\n  //   },\r\n};\r\n","var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport React from \"react\";\nimport objectAssign from \"object-assign\";\n\nvar Iframe = function Iframe(_a) {\n  var url = _a.url,\n      allowFullScreen = _a.allowFullScreen,\n      position = _a.position,\n      display = _a.display,\n      height = _a.height,\n      width = _a.width,\n      overflow = _a.overflow,\n      styles = _a.styles,\n      onLoad = _a.onLoad,\n      onMouseOver = _a.onMouseOver,\n      onMouseOut = _a.onMouseOut,\n      scrolling = _a.scrolling,\n      id = _a.id,\n      frameBorder = _a.frameBorder,\n      ariaHidden = _a.ariaHidden,\n      sandbox = _a.sandbox,\n      allow = _a.allow,\n      className = _a.className,\n      title = _a.title,\n      ariaLabel = _a.ariaLabel,\n      ariaLabelledby = _a.ariaLabelledby,\n      name = _a.name,\n      target = _a.target,\n      loading = _a.loading,\n      importance = _a.importance,\n      referrerpolicy = _a.referrerpolicy,\n      allowpaymentrequest = _a.allowpaymentrequest,\n      src = _a.src;\n  var defaultProps = objectAssign({\n    src: src || url,\n    target: target || null,\n    style: {\n      position: position || null,\n      display: display || \"block\",\n      overflow: overflow || null\n    },\n    scrolling: scrolling || null,\n    allowpaymentrequest: allowpaymentrequest || null,\n    importance: importance || null,\n    sandbox: sandbox || null,\n    loading: loading || null,\n    styles: styles || null,\n    name: name || null,\n    className: className || null,\n    referrerpolicy: referrerpolicy || null,\n    title: title || null,\n    allow: allow || null,\n    id: id || null,\n    \"aria-labelledby\": ariaLabelledby || null,\n    \"aria-hidden\": ariaHidden || null,\n    \"aria-label\": ariaLabel || null,\n    width: width || null,\n    height: height || null,\n    onLoad: onLoad || null,\n    onMouseOver: onMouseOver || null,\n    onMouseOut: onMouseOut || null\n  });\n  var props = Object.create(null);\n\n  for (var _i = 0, _b = Object.keys(defaultProps); _i < _b.length; _i++) {\n    var prop = _b[_i];\n\n    if (defaultProps[prop] != null) {\n      props[prop] = defaultProps[prop];\n    }\n  }\n\n  for (var _c = 0, _d = Object.keys(props.style); _c < _d.length; _c++) {\n    var i = _d[_c];\n\n    if (props.style[i] == null) {\n      delete props.style[i];\n    }\n  }\n\n  if (allowFullScreen) {\n    if (\"allow\" in props) {\n      var currentAllow = props.allow.replace(\"fullscreen\", \"\");\n      props.allow = (\"fullscreen \" + currentAllow.trim()).trim();\n    } else {\n      props.allow = \"fullscreen\";\n    }\n  }\n\n  if (frameBorder >= 0) {\n    if (!props.style.hasOwnProperty(\"border\")) {\n      props.style.border = frameBorder;\n    }\n  }\n\n  return React.createElement(\"iframe\", __assign({}, props));\n};\n\nexport default Iframe;"],"sourceRoot":""}